{"ast":null,"code":"// import React, { useState } from 'react';\n// import 'bootstrap-icons/font/bootstrap-icons.css';\n\n// function Calc() {\n//     const [value, setValue] = useState('');\n\n//     const handleButtonClick = (buttonValue) => {\n//         switch (buttonValue) {\n//             case 'AC':\n//                 setValue('');\n//                 break;\n//             case 'DE':\n//                 setValue(value.slice(0, -1));\n//                 break;\n//             case '.':\n//             case '/':\n//             case '*':\n//             case '+':\n//             case '-':\n//                 setValue(value + buttonValue);\n//                 break;\n//             case '=':\n//                 try {\n//                     setValue(calculate(value).toString());\n//                 } catch (error) {\n//                     setValue('Error');\n//                 }\n//                 break;\n//             default:\n//                 setValue(value + buttonValue);\n//                 break;\n//         }\n//     };\n\n//     const calculate = (expression) => {\n//         return new Function('return ' + expression)();\n//     };\n\n//     const renderButtons = (buttons) => {\n//         return buttons.map((button) => (\n//             <input\n//                 key={button}\n//                 type=\"button\"\n//                 value={button}\n//                 onClick={() => handleButtonClick(button)}\n//             />\n//         ));\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"container\">\n\n//                 <div className=\"calculator\">\n//                     <form action=\"\">\n//                         <div className='display'>\n//                             <input className='result' type=\"text\" value={value} readOnly />\n//                         </div>\n\n//                         <div>\n//                             {renderButtons(['AC', 'DE', '.', '/'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['7', '8', '9', '*'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['4', '5', '6', '+'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['1', '2', '3', '-'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['00', '0', ])}\n//                             {  renderButtons (['='])}\n\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Calc;","map":{"version":3,"names":[],"sources":["D:/Ayshwarya/React/calc/src/Components/Calc.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\n\r\n// function Calc() {\r\n//     const [value, setValue] = useState('');\r\n\r\n//     const handleButtonClick = (buttonValue) => {\r\n//         switch (buttonValue) {\r\n//             case 'AC':\r\n//                 setValue('');\r\n//                 break;\r\n//             case 'DE':\r\n//                 setValue(value.slice(0, -1));\r\n//                 break;\r\n//             case '.':\r\n//             case '/':\r\n//             case '*':\r\n//             case '+':\r\n//             case '-':\r\n//                 setValue(value + buttonValue);\r\n//                 break;\r\n//             case '=':\r\n//                 try {\r\n//                     setValue(calculate(value).toString());\r\n//                 } catch (error) {\r\n//                     setValue('Error');\r\n//                 }\r\n//                 break;\r\n//             default:\r\n//                 setValue(value + buttonValue);\r\n//                 break;\r\n//         }\r\n//     };\r\n\r\n//     const calculate = (expression) => {\r\n//         return new Function('return ' + expression)();\r\n//     };\r\n\r\n//     const renderButtons = (buttons) => {\r\n//         return buttons.map((button) => (\r\n//             <input\r\n//                 key={button}\r\n//                 type=\"button\"\r\n//                 value={button}\r\n//                 onClick={() => handleButtonClick(button)}\r\n//             />\r\n//         ));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"container\">\r\n        \r\n//                 <div className=\"calculator\">\r\n//                     <form action=\"\">\r\n//                         <div className='display'>\r\n//                             <input className='result' type=\"text\" value={value} readOnly />\r\n//                         </div>\r\n\r\n//                         <div>\r\n//                             {renderButtons(['AC', 'DE', '.', '/'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['7', '8', '9', '*'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['4', '5', '6', '+'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['1', '2', '3', '-'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['00', '0', ])}\r\n//                             {  renderButtons (['='])}\r\n\r\n//                         </div>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Calc;"],"mappings":"AAAA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}