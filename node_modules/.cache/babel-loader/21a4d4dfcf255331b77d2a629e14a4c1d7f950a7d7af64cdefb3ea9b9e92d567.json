{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ayshwarya\\\\React\\\\calc\\\\src\\\\Components\\\\Calc.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import 'bootstrap-icons/font/bootstrap-icons.css';\n\n// function Calc() {\n//     const [value, setValue] = useState('');\n\n//     const handleButtonClick = (buttonValue) => {\n//         switch (buttonValue) {\n//             case 'AC':\n//                 setValue('');\n//                 break;\n//             case 'DE':\n//                 setValue(value.slice(0, -1));\n//                 break;\n//             case '.':\n//             case '/':\n//             case '*':\n//             case '+':\n//             case '-':\n//                 setValue(value + buttonValue);\n//                 break;\n//             case '=':\n//                 try {\n//                     setValue(calculate(value).toString());\n//                 } catch (error) {\n//                     setValue('Error');\n//                 }\n//                 break;\n//             default:\n//                 setValue(value + buttonValue);\n//                 break;\n//         }\n//     };\n\n//     const calculate = (expression) => {\n//         return new Function('return ' + expression)();\n//     };\n\n//     const renderButtons = (buttons) => {\n//         return buttons.map((button) => (\n//             <input\n//                 key={button}\n//                 type=\"button\"\n//                 value={button}\n//                 onClick={() => handleButtonClick(button)}\n//             />\n//         ));\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"container\">\n\n//                 <div className=\"calculator\">\n//                     <form action=\"\">\n//                         <div className='display'>\n//                             <input className='result' type=\"text\" value={value} readOnly />\n//                         </div>\n\n//                         <div>\n//                             {renderButtons(['AC', 'DE', '.', '/'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['7', '8', '9', '*'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['4', '5', '6', '+'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['1', '2', '3', '-'])}\n//                         </div>\n//                         <div>\n//                             {renderButtons(['00', '0', ])}\n//                             {  renderButtons (['='])}\n\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Calc;\n\nimport React, { useState } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calc() {\n  _s();\n  const [value, setValue] = useState('');\n  const handleButtonClick = buttonValue => {\n    switch (buttonValue) {\n      case 'AC':\n        setValue('');\n        break;\n      case 'DE':\n        setValue(value.slice(0, -1));\n        break;\n      case '.':\n      case '/':\n      case '*':\n      case '+':\n      case '-':\n        setValue(value + buttonValue);\n        break;\n      case '=':\n        try {\n          setValue(calculate(value).toString());\n        } catch (error) {\n          setValue('Error');\n        }\n        break;\n      default:\n        setValue(value + buttonValue);\n        break;\n    }\n  };\n  const calculate = expression => {\n    return new Function('return ' + expression)();\n  };\n  const renderButtons = buttons => {\n    return buttons.map(button => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: button,\n      onClick: () => handleButtonClick(button)\n    }, button, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"display\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"result\",\n              type: \"text\",\n              value: value,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: renderButtons(['AC', 'DE', '.', '/'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: renderButtons(['7', '8', '9', '*'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: renderButtons(['4', '5', '6', '+'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: renderButtons(['1', '2', '3', '-'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: renderButtons(['00', '0', '='])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(Calc, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Calc;\nexport default Calc;\nvar _c;\n$RefreshReg$(_c, \"Calc\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calc","_s","value","setValue","handleButtonClick","buttonValue","slice","calculate","toString","error","expression","Function","renderButtons","buttons","map","button","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","action","readOnly","_c","$RefreshReg$"],"sources":["D:/Ayshwarya/React/calc/src/Components/Calc.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\n\r\n// function Calc() {\r\n//     const [value, setValue] = useState('');\r\n\r\n//     const handleButtonClick = (buttonValue) => {\r\n//         switch (buttonValue) {\r\n//             case 'AC':\r\n//                 setValue('');\r\n//                 break;\r\n//             case 'DE':\r\n//                 setValue(value.slice(0, -1));\r\n//                 break;\r\n//             case '.':\r\n//             case '/':\r\n//             case '*':\r\n//             case '+':\r\n//             case '-':\r\n//                 setValue(value + buttonValue);\r\n//                 break;\r\n//             case '=':\r\n//                 try {\r\n//                     setValue(calculate(value).toString());\r\n//                 } catch (error) {\r\n//                     setValue('Error');\r\n//                 }\r\n//                 break;\r\n//             default:\r\n//                 setValue(value + buttonValue);\r\n//                 break;\r\n//         }\r\n//     };\r\n\r\n//     const calculate = (expression) => {\r\n//         return new Function('return ' + expression)();\r\n//     };\r\n\r\n//     const renderButtons = (buttons) => {\r\n//         return buttons.map((button) => (\r\n//             <input\r\n//                 key={button}\r\n//                 type=\"button\"\r\n//                 value={button}\r\n//                 onClick={() => handleButtonClick(button)}\r\n//             />\r\n//         ));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"container\">\r\n        \r\n//                 <div className=\"calculator\">\r\n//                     <form action=\"\">\r\n//                         <div className='display'>\r\n//                             <input className='result' type=\"text\" value={value} readOnly />\r\n//                         </div>\r\n\r\n//                         <div>\r\n//                             {renderButtons(['AC', 'DE', '.', '/'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['7', '8', '9', '*'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['4', '5', '6', '+'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['1', '2', '3', '-'])}\r\n//                         </div>\r\n//                         <div>\r\n//                             {renderButtons(['00', '0', ])}\r\n//                             {  renderButtons (['='])}\r\n\r\n//                         </div>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Calc;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nfunction Calc() {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleButtonClick = (buttonValue) => {\r\n    switch (buttonValue) {\r\n      case 'AC':\r\n        setValue('');\r\n        break;\r\n      case 'DE':\r\n        setValue(value.slice(0, -1));\r\n        break;\r\n      case '.':\r\n      case '/':\r\n      case '*':\r\n      case '+':\r\n      case '-':\r\n        setValue(value + buttonValue);\r\n        break;\r\n      case '=':\r\n        try {\r\n          setValue(calculate(value).toString());\r\n        } catch (error) {\r\n          setValue('Error');\r\n        }\r\n        break;\r\n      default:\r\n        setValue(value + buttonValue);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const calculate = (expression) => {\r\n    return new Function('return ' + expression)();\r\n  };\r\n\r\n  const renderButtons = (buttons) => {\r\n    return buttons.map((button) => (\r\n      <input\r\n        key={button}\r\n        type=\"button\"\r\n        value={button}\r\n        onClick={() => handleButtonClick(button)}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"calculator\">\r\n          <form action=\"\">\r\n            <div className='display'>\r\n              <input className='result' type=\"text\" value={value} readOnly />\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n              {renderButtons(['AC', 'DE', '.', '/'])}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              {renderButtons(['7', '8', '9', '*'])}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              {renderButtons(['4', '5', '6', '+'])}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              {renderButtons(['1', '2', '3', '-'])}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              {renderButtons(['00', '0', '='])}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calc;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}